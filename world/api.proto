// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..
package world.service.v1;

// NOTE: 最后请删除这些无用的注释 (゜-゜)つロ

option go_package = "api";
option (gogoproto.goproto_getters_all) = false;

service world {
  rpc Ping(.google.protobuf.Empty) returns (.google.protobuf.Empty);
  rpc SayHello(HelloReq) returns (.google.protobuf.Empty);
  rpc SayHelloURL(HelloReq) returns (HelloResp) {
        option (google.api.http) = {
          get: "/world/say_hello"
        };
  };

  rpc OnRedisDemo(RedisDemoReq) returns (RedisDemoResp) {
        option (google.api.http) = {
          post: "/world/OnRedisDemo"
        };
  };


  rpc OnMysqlDemo(MysqlDemoReq) returns (MysqlDemoResp) {
        option (google.api.http) = {
          post: "/world/OnMysqlDemo"
        };
  };


   // room Number generate
  rpc OnGenerateRoomNums(GenerateRoomNumsReq) returns (GenerateRoomNumsRsp) {
        option (google.api.http) = {
            post:"/world/OnGenerateRoomNums"
        };
  };

  rpc OnApplyCustomRoomNum (ApplyCustomRoomNumReq) returns (ApplyCustomRoomNumRsp) {
        option (google.api.http) = {
            post:"/world/OnApplyCustomRoomNum"
        };
  };

  rpc OnDisbandCustomRoomNum (DisbandCustomRoomReq) returns (DisbandCustomRoomRsp) {
        option (google.api.http) = {
            post:"/world/OnDisbandCustomRoomNum"
        };
  };

}

message HelloReq {
  string name = 1 [(gogoproto.moretags) = 'form:"name" validate:"required"'];
}

message HelloResp {
  string Content = 1 [(gogoproto.jsontag) = 'content'];
}


message RedisDemoReq {
   string key = 1 ;
   string value = 2;
}

message RedisDemoResp {
  int32 code = 1;
  string message = 2;
}


message MysqlDemoReq {
   int32 id = 1 ;
   string title = 2;
}

message MysqlDemoResp {
  int32 code = 1;
  string message = 2;
}



message GenerateRoomNumsReq
{
    int32 GameId = 1 [(gogoproto.jsontag) = "GameId", (gogoproto.moretags)='form:"GameId" validate:"required"'];		    // 游戏ID
    int32 FromId = 2 [(gogoproto.jsontag) = "FromId", (gogoproto.moretags)='form:"FromId" validate:"required"'];	        // 起始ID
    int32 ToId = 3 [(gogoproto.jsontag) = "ToId", (gogoproto.moretags)='form:"ToId" validate:"required"'];                  // 终止ID
}

message GenerateRoomNumsRsp
{
    int32 Code = 1;
    string Content = 2 ;
}


message ApplyCustomRoomNumReq
{
    int32 GameId = 1	   [(gogoproto.jsontag) = "GameId", (gogoproto.moretags)='form:"GameId" validate:"required"'];		// 游戏ID
}

message ApplyCustomRoomNumRsp
{
    int32 Code = 1 [(gogoproto.jsontag) = "Code"];	// 状态
    string Message = 2 [(gogoproto.jsontag) = "Message"];   // 信息
    int32 RoomNum = 3 [(gogoproto.jsontag) = "RoomNum"];  // 房间号
    int32 RoomNo = 4 [(gogoproto.jsontag) = "RoomNo"];  // 牌局号
}

message DisbandCustomRoomReq
{
    int32 GameId = 1	[(gogoproto.jsontag) = "GameId", (gogoproto.moretags)='form:"GameId" validate:"required"'];		// 游戏ID
    int32 RoomNum = 2   [(gogoproto.jsontag) = "RoomNum", (gogoproto.moretags)='form:"RoomNum" validate:"required"'];   // 房间号
}

message DisbandCustomRoomRsp
{
    int32 Code = 1 [(gogoproto.jsontag) = "Code"];	// 状态
    string Message = 2 [(gogoproto.jsontag) = "Message"];   // 信息
    int32 UserId = 3   [(gogoproto.jsontag) = "UserId"];     // 消耗/归还 房卡用户
}

enum WorldErrCode {
    UndefinedCode = 0; // 因protobuf协议限制必须存在！！！无意义的0，工具生成代码时会忽略该参数
    RoomNumNotExist = 100200;
    ParseRoomConfigJsonFailed = 100201;
    RoomCardsCountError = 100202;
    GameIdNotConfigured = 100203;
    RoomCardsUseFailed= 100204;
    RocoverRoomCardsFailed = 100205;
    RoomCardsConfigNotFound = 100206;
    SetRoomConfigFail = 100207;
    CreateRoomNumFailed = 100208;
    NoFreeRoomNumsFail = 100209; // 没有可用的房间号
    ApplyCustomRoomNumFail = 100210; //创建随机房间号失败
    DisbandCustomRoomNumFail = 100211; //释放房间号失败

}