// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WorldErrCode int32

const (
	WorldErrCode_UndefinedCode             WorldErrCode = 0
	WorldErrCode_RoomNumNotExist           WorldErrCode = 100200
	WorldErrCode_ParseRoomConfigJsonFailed WorldErrCode = 100201
	WorldErrCode_RoomCardsCountError       WorldErrCode = 100202
	WorldErrCode_GameIdNotConfigured       WorldErrCode = 100203
	WorldErrCode_RoomCardsUseFailed        WorldErrCode = 100204
	WorldErrCode_RocoverRoomCardsFailed    WorldErrCode = 100205
	WorldErrCode_RoomCardsConfigNotFound   WorldErrCode = 100206
	WorldErrCode_SetRoomConfigFail         WorldErrCode = 100207
	WorldErrCode_CreateRoomNumFailed       WorldErrCode = 100208
	WorldErrCode_NoFreeRoomNumsFail        WorldErrCode = 100209
	WorldErrCode_ApplyCustomRoomNumFail    WorldErrCode = 100210
	WorldErrCode_DisbandCustomRoomNumFail  WorldErrCode = 100211
)

var WorldErrCode_name = map[int32]string{
	0:      "UndefinedCode",
	100200: "RoomNumNotExist",
	100201: "ParseRoomConfigJsonFailed",
	100202: "RoomCardsCountError",
	100203: "GameIdNotConfigured",
	100204: "RoomCardsUseFailed",
	100205: "RocoverRoomCardsFailed",
	100206: "RoomCardsConfigNotFound",
	100207: "SetRoomConfigFail",
	100208: "CreateRoomNumFailed",
	100209: "NoFreeRoomNumsFail",
	100210: "ApplyCustomRoomNumFail",
	100211: "DisbandCustomRoomNumFail",
}

var WorldErrCode_value = map[string]int32{
	"UndefinedCode":             0,
	"RoomNumNotExist":           100200,
	"ParseRoomConfigJsonFailed": 100201,
	"RoomCardsCountError":       100202,
	"GameIdNotConfigured":       100203,
	"RoomCardsUseFailed":        100204,
	"RocoverRoomCardsFailed":    100205,
	"RoomCardsConfigNotFound":   100206,
	"SetRoomConfigFail":         100207,
	"CreateRoomNumFailed":       100208,
	"NoFreeRoomNumsFail":        100209,
	"ApplyCustomRoomNumFail":    100210,
	"DisbandCustomRoomNumFail":  100211,
}

func (x WorldErrCode) String() string {
	return proto.EnumName(WorldErrCode_name, int32(x))
}

func (WorldErrCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type HelloReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" form:"name" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReq) Reset()         { *m = HelloReq{} }
func (m *HelloReq) String() string { return proto.CompactTextString(m) }
func (*HelloReq) ProtoMessage()    {}
func (*HelloReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}
func (m *HelloReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HelloReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HelloReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HelloReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReq.Merge(m, src)
}
func (m *HelloReq) XXX_Size() int {
	return m.Size()
}
func (m *HelloReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReq.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReq proto.InternalMessageInfo

type HelloResp struct {
	Content              string   `protobuf:"bytes,1,opt,name=Content,proto3" json:"content"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloResp) Reset()         { *m = HelloResp{} }
func (m *HelloResp) String() string { return proto.CompactTextString(m) }
func (*HelloResp) ProtoMessage()    {}
func (*HelloResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}
func (m *HelloResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HelloResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HelloResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HelloResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloResp.Merge(m, src)
}
func (m *HelloResp) XXX_Size() int {
	return m.Size()
}
func (m *HelloResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloResp.DiscardUnknown(m)
}

var xxx_messageInfo_HelloResp proto.InternalMessageInfo

type RedisDemoReq struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedisDemoReq) Reset()         { *m = RedisDemoReq{} }
func (m *RedisDemoReq) String() string { return proto.CompactTextString(m) }
func (*RedisDemoReq) ProtoMessage()    {}
func (*RedisDemoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}
func (m *RedisDemoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RedisDemoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RedisDemoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RedisDemoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedisDemoReq.Merge(m, src)
}
func (m *RedisDemoReq) XXX_Size() int {
	return m.Size()
}
func (m *RedisDemoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RedisDemoReq.DiscardUnknown(m)
}

var xxx_messageInfo_RedisDemoReq proto.InternalMessageInfo

type RedisDemoResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RedisDemoResp) Reset()         { *m = RedisDemoResp{} }
func (m *RedisDemoResp) String() string { return proto.CompactTextString(m) }
func (*RedisDemoResp) ProtoMessage()    {}
func (*RedisDemoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}
func (m *RedisDemoResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RedisDemoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RedisDemoResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RedisDemoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedisDemoResp.Merge(m, src)
}
func (m *RedisDemoResp) XXX_Size() int {
	return m.Size()
}
func (m *RedisDemoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_RedisDemoResp.DiscardUnknown(m)
}

var xxx_messageInfo_RedisDemoResp proto.InternalMessageInfo

type MysqlDemoReq struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MysqlDemoReq) Reset()         { *m = MysqlDemoReq{} }
func (m *MysqlDemoReq) String() string { return proto.CompactTextString(m) }
func (*MysqlDemoReq) ProtoMessage()    {}
func (*MysqlDemoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}
func (m *MysqlDemoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MysqlDemoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MysqlDemoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MysqlDemoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlDemoReq.Merge(m, src)
}
func (m *MysqlDemoReq) XXX_Size() int {
	return m.Size()
}
func (m *MysqlDemoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlDemoReq.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlDemoReq proto.InternalMessageInfo

type MysqlDemoResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MysqlDemoResp) Reset()         { *m = MysqlDemoResp{} }
func (m *MysqlDemoResp) String() string { return proto.CompactTextString(m) }
func (*MysqlDemoResp) ProtoMessage()    {}
func (*MysqlDemoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}
func (m *MysqlDemoResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MysqlDemoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MysqlDemoResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MysqlDemoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlDemoResp.Merge(m, src)
}
func (m *MysqlDemoResp) XXX_Size() int {
	return m.Size()
}
func (m *MysqlDemoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlDemoResp.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlDemoResp proto.InternalMessageInfo

type GenerateRoomNumsReq struct {
	GameId               int32    `protobuf:"varint,1,opt,name=GameId,proto3" json:"GameId" form:"GameId" validate:"required"`
	FromId               int32    `protobuf:"varint,2,opt,name=FromId,proto3" json:"FromId" form:"FromId" validate:"required"`
	ToId                 int32    `protobuf:"varint,3,opt,name=ToId,proto3" json:"ToId" form:"ToId" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateRoomNumsReq) Reset()         { *m = GenerateRoomNumsReq{} }
func (m *GenerateRoomNumsReq) String() string { return proto.CompactTextString(m) }
func (*GenerateRoomNumsReq) ProtoMessage()    {}
func (*GenerateRoomNumsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}
func (m *GenerateRoomNumsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenerateRoomNumsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenerateRoomNumsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenerateRoomNumsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateRoomNumsReq.Merge(m, src)
}
func (m *GenerateRoomNumsReq) XXX_Size() int {
	return m.Size()
}
func (m *GenerateRoomNumsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateRoomNumsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateRoomNumsReq proto.InternalMessageInfo

type GenerateRoomNumsRsp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenerateRoomNumsRsp) Reset()         { *m = GenerateRoomNumsRsp{} }
func (m *GenerateRoomNumsRsp) String() string { return proto.CompactTextString(m) }
func (*GenerateRoomNumsRsp) ProtoMessage()    {}
func (*GenerateRoomNumsRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}
func (m *GenerateRoomNumsRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenerateRoomNumsRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenerateRoomNumsRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenerateRoomNumsRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenerateRoomNumsRsp.Merge(m, src)
}
func (m *GenerateRoomNumsRsp) XXX_Size() int {
	return m.Size()
}
func (m *GenerateRoomNumsRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GenerateRoomNumsRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GenerateRoomNumsRsp proto.InternalMessageInfo

type ApplyCustomRoomNumReq struct {
	GameId               int32    `protobuf:"varint,1,opt,name=GameId,proto3" json:"GameId" form:"GameId" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyCustomRoomNumReq) Reset()         { *m = ApplyCustomRoomNumReq{} }
func (m *ApplyCustomRoomNumReq) String() string { return proto.CompactTextString(m) }
func (*ApplyCustomRoomNumReq) ProtoMessage()    {}
func (*ApplyCustomRoomNumReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}
func (m *ApplyCustomRoomNumReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplyCustomRoomNumReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplyCustomRoomNumReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplyCustomRoomNumReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyCustomRoomNumReq.Merge(m, src)
}
func (m *ApplyCustomRoomNumReq) XXX_Size() int {
	return m.Size()
}
func (m *ApplyCustomRoomNumReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyCustomRoomNumReq.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyCustomRoomNumReq proto.InternalMessageInfo

type ApplyCustomRoomNumRsp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message"`
	RoomNum              int32    `protobuf:"varint,3,opt,name=RoomNum,proto3" json:"RoomNum"`
	RoomNo               int32    `protobuf:"varint,4,opt,name=RoomNo,proto3" json:"RoomNo"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyCustomRoomNumRsp) Reset()         { *m = ApplyCustomRoomNumRsp{} }
func (m *ApplyCustomRoomNumRsp) String() string { return proto.CompactTextString(m) }
func (*ApplyCustomRoomNumRsp) ProtoMessage()    {}
func (*ApplyCustomRoomNumRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}
func (m *ApplyCustomRoomNumRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplyCustomRoomNumRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplyCustomRoomNumRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplyCustomRoomNumRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyCustomRoomNumRsp.Merge(m, src)
}
func (m *ApplyCustomRoomNumRsp) XXX_Size() int {
	return m.Size()
}
func (m *ApplyCustomRoomNumRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyCustomRoomNumRsp.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyCustomRoomNumRsp proto.InternalMessageInfo

type DisbandCustomRoomReq struct {
	GameId               int32    `protobuf:"varint,1,opt,name=GameId,proto3" json:"GameId" form:"GameId" validate:"required"`
	RoomNum              int32    `protobuf:"varint,2,opt,name=RoomNum,proto3" json:"RoomNum" form:"RoomNum" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisbandCustomRoomReq) Reset()         { *m = DisbandCustomRoomReq{} }
func (m *DisbandCustomRoomReq) String() string { return proto.CompactTextString(m) }
func (*DisbandCustomRoomReq) ProtoMessage()    {}
func (*DisbandCustomRoomReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}
func (m *DisbandCustomRoomReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DisbandCustomRoomReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DisbandCustomRoomReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DisbandCustomRoomReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisbandCustomRoomReq.Merge(m, src)
}
func (m *DisbandCustomRoomReq) XXX_Size() int {
	return m.Size()
}
func (m *DisbandCustomRoomReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DisbandCustomRoomReq.DiscardUnknown(m)
}

var xxx_messageInfo_DisbandCustomRoomReq proto.InternalMessageInfo

type DisbandCustomRoomRsp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message"`
	UserId               int32    `protobuf:"varint,3,opt,name=UserId,proto3" json:"UserId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisbandCustomRoomRsp) Reset()         { *m = DisbandCustomRoomRsp{} }
func (m *DisbandCustomRoomRsp) String() string { return proto.CompactTextString(m) }
func (*DisbandCustomRoomRsp) ProtoMessage()    {}
func (*DisbandCustomRoomRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}
func (m *DisbandCustomRoomRsp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DisbandCustomRoomRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DisbandCustomRoomRsp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DisbandCustomRoomRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisbandCustomRoomRsp.Merge(m, src)
}
func (m *DisbandCustomRoomRsp) XXX_Size() int {
	return m.Size()
}
func (m *DisbandCustomRoomRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_DisbandCustomRoomRsp.DiscardUnknown(m)
}

var xxx_messageInfo_DisbandCustomRoomRsp proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("world.service.v1.WorldErrCode", WorldErrCode_name, WorldErrCode_value)
	proto.RegisterType((*HelloReq)(nil), "world.service.v1.HelloReq")
	proto.RegisterType((*HelloResp)(nil), "world.service.v1.HelloResp")
	proto.RegisterType((*RedisDemoReq)(nil), "world.service.v1.RedisDemoReq")
	proto.RegisterType((*RedisDemoResp)(nil), "world.service.v1.RedisDemoResp")
	proto.RegisterType((*MysqlDemoReq)(nil), "world.service.v1.MysqlDemoReq")
	proto.RegisterType((*MysqlDemoResp)(nil), "world.service.v1.MysqlDemoResp")
	proto.RegisterType((*GenerateRoomNumsReq)(nil), "world.service.v1.GenerateRoomNumsReq")
	proto.RegisterType((*GenerateRoomNumsRsp)(nil), "world.service.v1.GenerateRoomNumsRsp")
	proto.RegisterType((*ApplyCustomRoomNumReq)(nil), "world.service.v1.ApplyCustomRoomNumReq")
	proto.RegisterType((*ApplyCustomRoomNumRsp)(nil), "world.service.v1.ApplyCustomRoomNumRsp")
	proto.RegisterType((*DisbandCustomRoomReq)(nil), "world.service.v1.DisbandCustomRoomReq")
	proto.RegisterType((*DisbandCustomRoomRsp)(nil), "world.service.v1.DisbandCustomRoomRsp")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 1016 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0x4d, 0x6f, 0xdc, 0x44,
	0x18, 0x8e, 0xf3, 0xe1, 0x24, 0x6f, 0x52, 0x70, 0xa7, 0x69, 0xba, 0xd9, 0x24, 0xeb, 0x76, 0xaa,
	0x00, 0x02, 0xb1, 0xab, 0x16, 0x54, 0xa4, 0x4a, 0x80, 0xc8, 0x36, 0x09, 0x01, 0xba, 0xa9, 0x5c,
	0x22, 0x24, 0x2e, 0xd4, 0x59, 0x4f, 0xb6, 0x06, 0x7b, 0xc6, 0x99, 0xf1, 0x2e, 0xec, 0x09, 0x09,
	0x89, 0x23, 0xcb, 0x81, 0x0b, 0xff, 0x80, 0x0b, 0x3f, 0xa4, 0x47, 0x24, 0xee, 0x2b, 0x48, 0x39,
	0x94, 0xf0, 0xbd, 0xfc, 0x01, 0xe4, 0x99, 0xb1, 0xd7, 0x74, 0xbd, 0x55, 0x2a, 0xe5, 0xe4, 0x79,
	0xbf, 0x9e, 0xe7, 0xf1, 0xeb, 0x77, 0xfc, 0xc2, 0xbc, 0x1b, 0xf9, 0xd5, 0x88, 0xb3, 0x98, 0x21,
	0xeb, 0x53, 0xc6, 0x03, 0xaf, 0x2a, 0x08, 0xef, 0xf8, 0x4d, 0x52, 0xed, 0x5c, 0x2b, 0xbf, 0xdc,
	0xf2, 0xe3, 0xfb, 0xed, 0x83, 0x6a, 0x93, 0x85, 0xb5, 0x16, 0x6b, 0xb1, 0x9a, 0x4c, 0x3c, 0x68,
	0x1f, 0x4a, 0x4b, 0x1a, 0xf2, 0xa4, 0x00, 0xca, 0xab, 0x2d, 0xc6, 0x5a, 0x01, 0x19, 0x66, 0x91,
	0x30, 0x8a, 0xbb, 0x3a, 0xb8, 0xa6, 0x83, 0x6e, 0xe4, 0xd7, 0x5c, 0x4a, 0x59, 0xec, 0xc6, 0x3e,
	0xa3, 0x42, 0x45, 0x71, 0x1d, 0xe6, 0xde, 0x26, 0x41, 0xc0, 0x1c, 0x72, 0x84, 0x5e, 0x83, 0x69,
	0xea, 0x86, 0xa4, 0x64, 0x5c, 0x36, 0x5e, 0x98, 0xdf, 0xbc, 0x3a, 0xe8, 0xdb, 0xf6, 0x21, 0xe3,
	0xe1, 0x4d, 0x9c, 0x78, 0xf1, 0xe5, 0x8e, 0x1b, 0xf8, 0x9e, 0x1b, 0x93, 0x9b, 0x98, 0x93, 0xa3,
	0xb6, 0xcf, 0x89, 0x87, 0x1d, 0x59, 0x80, 0xaf, 0xc3, 0xbc, 0x06, 0x11, 0x11, 0xda, 0x80, 0xd9,
	0x3a, 0xa3, 0x31, 0xa1, 0xb1, 0x06, 0x5a, 0x38, 0xe9, 0xdb, 0xb3, 0x4d, 0xe5, 0x72, 0xd2, 0x18,
	0xbe, 0x01, 0x8b, 0x0e, 0xf1, 0x7c, 0x71, 0x8b, 0x84, 0x92, 0xdc, 0x82, 0xa9, 0x4f, 0x48, 0x57,
	0x95, 0x38, 0xc9, 0x11, 0x2d, 0xc1, 0x4c, 0xc7, 0x0d, 0xda, 0xa4, 0x34, 0x29, 0x7d, 0xca, 0xc0,
	0xaf, 0xc3, 0xb9, 0x5c, 0x9d, 0x88, 0x10, 0x82, 0xe9, 0x26, 0xf3, 0x94, 0xea, 0x19, 0x47, 0x9e,
	0x51, 0x09, 0x66, 0x43, 0x22, 0x84, 0xdb, 0x4a, 0x8b, 0x53, 0x13, 0xbf, 0x0a, 0x8b, 0xb7, 0xbb,
	0xe2, 0x28, 0x48, 0x69, 0x9f, 0x81, 0x49, 0xdf, 0xd3, 0xb5, 0x93, 0xbe, 0x97, 0x90, 0xc6, 0x7e,
	0x1c, 0x64, 0xa4, 0xd2, 0x48, 0x48, 0x73, 0x55, 0x4f, 0x4d, 0xfa, 0xc8, 0x80, 0x0b, 0x3b, 0x84,
	0x12, 0xee, 0xc6, 0xc4, 0x61, 0x2c, 0x6c, 0xb4, 0x43, 0x91, 0x90, 0xef, 0x80, 0xb9, 0xe3, 0x86,
	0x64, 0x57, 0x0b, 0xd8, 0xac, 0x9d, 0xf4, 0x6d, 0xed, 0x19, 0xf4, 0xed, 0x2b, 0xaa, 0xf9, 0xca,
	0x2e, 0x6e, 0xbf, 0x4e, 0x4e, 0x80, 0xb6, 0x39, 0x0b, 0x77, 0x3d, 0xc9, 0xac, 0x81, 0x94, 0x67,
	0x08, 0xa4, 0xec, 0x31, 0x40, 0x2a, 0x88, 0xde, 0x84, 0xe9, 0xf7, 0xd9, 0xae, 0x57, 0x9a, 0x92,
	0x30, 0x2f, 0x9d, 0xf4, 0x6d, 0x69, 0x0f, 0x47, 0x21, 0xb1, 0xc6, 0x8c, 0x82, 0x0c, 0xd5, 0x0b,
	0xde, 0x54, 0xf5, 0xab, 0x9e, 0xeb, 0x57, 0x5d, 0xf7, 0x2b, 0x1d, 0x14, 0xdd, 0xaf, 0x74, 0x36,
	0xee, 0xc1, 0xc5, 0xb7, 0xa2, 0x28, 0xe8, 0xd6, 0xdb, 0x22, 0x66, 0xa1, 0xc6, 0x39, 0xcb, 0x86,
	0xe1, 0xef, 0x8c, 0x42, 0x0a, 0x11, 0xa1, 0xb5, 0xbc, 0xd2, 0xcd, 0xb9, 0xa4, 0x03, 0x89, 0xad,
	0x35, 0x6f, 0xc0, 0xec, 0xed, 0xfc, 0x37, 0x56, 0xc3, 0xad, 0x5d, 0x4e, 0x7a, 0x48, 0xd2, 0x34,
	0xa4, 0xee, 0xa4, 0x4c, 0x4b, 0x59, 0xd2, 0x03, 0xc2, 0x60, 0xca, 0x23, 0x2b, 0x4d, 0xcb, 0x2c,
	0x48, 0x5e, 0x47, 0x79, 0x1c, 0xfd, 0xc4, 0xdf, 0x1b, 0xb0, 0x74, 0xcb, 0x17, 0x07, 0x2e, 0xf5,
	0x86, 0x5a, 0xcf, 0x74, 0x78, 0xde, 0x1d, 0x8a, 0x55, 0xd3, 0x73, 0x2d, 0x27, 0x76, 0xd0, 0xb7,
	0xb1, 0x82, 0xd2, 0x8e, 0x62, 0xac, 0x34, 0x1d, 0x7f, 0x5e, 0xa4, 0xf6, 0xac, 0xda, 0x8a, 0xc1,
	0xdc, 0x17, 0x84, 0x67, 0xf3, 0x29, 0xfb, 0xa5, 0x3c, 0x8e, 0x7e, 0xbe, 0x38, 0x98, 0x84, 0xc5,
	0x0f, 0x92, 0xff, 0xe9, 0x16, 0xe7, 0x12, 0xfb, 0x3c, 0x9c, 0xdb, 0xa7, 0x1e, 0x39, 0xf4, 0x29,
	0xf1, 0x12, 0x87, 0x35, 0x81, 0x2e, 0xc2, 0xb3, 0x5a, 0x6f, 0x83, 0xc5, 0x5b, 0x9f, 0xf9, 0x22,
	0xb6, 0x1e, 0xf5, 0x4c, 0x64, 0xc3, 0xca, 0x1d, 0x97, 0x0b, 0x39, 0xb8, 0x75, 0x46, 0x0f, 0xfd,
	0xd6, 0x3b, 0x82, 0xd1, 0x6d, 0xd7, 0x0f, 0x88, 0x67, 0xfd, 0xda, 0x33, 0xd1, 0x0a, 0x5c, 0x90,
	0x31, 0x97, 0x7b, 0xa2, 0xce, 0xda, 0x34, 0xde, 0xe2, 0x9c, 0x71, 0xeb, 0x44, 0x85, 0x54, 0x3b,
	0x1b, 0x2c, 0x56, 0xb5, 0x6d, 0x4e, 0x3c, 0xeb, 0xb7, 0x9e, 0x89, 0x4a, 0x80, 0xb2, 0xaa, 0x7d,
	0x41, 0x34, 0xde, 0xef, 0x3d, 0x13, 0xad, 0xc1, 0xb2, 0xc3, 0x9a, 0xac, 0x43, 0x78, 0x96, 0xa0,
	0xa3, 0x7f, 0xf4, 0x4c, 0xb4, 0x0e, 0x97, 0x72, 0x6c, 0x09, 0x64, 0x83, 0xc5, 0xdb, 0xac, 0x4d,
	0x3d, 0xeb, 0xcf, 0x9e, 0x89, 0x2e, 0xc1, 0xf9, 0xbb, 0x24, 0x1e, 0x6a, 0x4d, 0x2a, 0xad, 0xbf,
	0x94, 0x94, 0x3a, 0x27, 0xc3, 0x0b, 0xa8, 0x21, 0xff, 0x56, 0x52, 0x1a, 0x6c, 0x9b, 0x93, 0xec,
	0x6e, 0xca, 0xa2, 0x7f, 0x94, 0x94, 0xd1, 0xfb, 0x20, 0xa3, 0x83, 0x9e, 0x89, 0x2a, 0x50, 0x1a,
	0xf9, 0xaa, 0x69, 0xfc, 0xdf, 0x9e, 0x79, 0xfd, 0xa1, 0x09, 0x33, 0x72, 0x89, 0xa1, 0x1b, 0x30,
	0x7d, 0xc7, 0xa7, 0x2d, 0xb4, 0x5c, 0x55, 0x6b, 0xa7, 0x9a, 0xee, 0xa4, 0xea, 0x56, 0xb2, 0x93,
	0xca, 0x63, 0xfc, 0xe8, 0x0d, 0x98, 0xbb, 0xeb, 0x76, 0xe5, 0x16, 0x41, 0xe5, 0xea, 0xe3, 0x0b,
	0xb1, 0x9a, 0xee, 0xa8, 0xb1, 0xf5, 0xf7, 0x60, 0x21, 0xad, 0xdf, 0x77, 0xde, 0x7b, 0x22, 0xc4,
	0xea, 0xd8, 0x98, 0x88, 0x70, 0xe9, 0x8b, 0x1f, 0x7f, 0xf9, 0x66, 0x12, 0x21, 0xab, 0x26, 0x93,
	0x6a, 0xc2, 0xed, 0x7e, 0x74, 0x5f, 0xaa, 0xfa, 0x18, 0x16, 0xf6, 0x68, 0xb6, 0x7a, 0x50, 0x65,
	0x14, 0x25, 0xbf, 0xcf, 0xca, 0xf6, 0x13, 0xe3, 0x22, 0xc2, 0x65, 0xc9, 0xb4, 0x84, 0x91, 0x66,
	0xca, 0x83, 0x4b, 0xae, 0x6c, 0xe3, 0x14, 0x71, 0xe5, 0x97, 0x58, 0x11, 0xd7, 0xff, 0xd6, 0x55,
	0x01, 0xd7, 0x10, 0xfc, 0x4b, 0x03, 0xd0, 0x1e, 0x7d, 0xfc, 0xa7, 0x8d, 0x36, 0x46, 0x31, 0x0b,
	0x56, 0x58, 0xf9, 0x34, 0x69, 0x22, 0xc2, 0x57, 0xa4, 0x80, 0x55, 0xbc, 0x92, 0x09, 0x18, 0x21,
	0xfc, 0xca, 0x80, 0xa5, 0x3d, 0x3a, 0x3a, 0x84, 0xe8, 0xf9, 0x51, 0x8a, 0xc2, 0xed, 0x50, 0x3e,
	0x5d, 0xa2, 0x88, 0xf0, 0x55, 0xa9, 0x66, 0x1d, 0xaf, 0x66, 0x6a, 0x0a, 0x68, 0xbf, 0x36, 0x60,
	0x79, 0x8f, 0x16, 0x8d, 0x3d, 0x7a, 0x6e, 0x94, 0xa8, 0xe8, 0x17, 0x5d, 0x3e, 0x55, 0x9e, 0x88,
	0xf0, 0x86, 0xd4, 0x63, 0xe3, 0xf5, 0x4c, 0x4f, 0x11, 0xed, 0xe6, 0xca, 0x83, 0x9f, 0x2b, 0x13,
	0x0f, 0x8e, 0x2b, 0xc6, 0x0f, 0xc7, 0x15, 0xe3, 0xa7, 0xe3, 0x8a, 0xf1, 0xed, 0xc3, 0xca, 0xc4,
	0x87, 0x53, 0x6e, 0xe4, 0x1f, 0x98, 0xf2, 0x3a, 0xbc, 0xf2, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x39, 0x32, 0xd6, 0x30, 0x56, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorldClient is the client API for World service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorldClient interface {
	Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	SayHello(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*empty.Empty, error)
	SayHelloURL(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*HelloResp, error)
	OnRedisDemo(ctx context.Context, in *RedisDemoReq, opts ...grpc.CallOption) (*RedisDemoResp, error)
	OnMysqlDemo(ctx context.Context, in *MysqlDemoReq, opts ...grpc.CallOption) (*MysqlDemoResp, error)
	// room Number generate
	OnGenerateRoomNums(ctx context.Context, in *GenerateRoomNumsReq, opts ...grpc.CallOption) (*GenerateRoomNumsRsp, error)
	OnApplyCustomRoomNum(ctx context.Context, in *ApplyCustomRoomNumReq, opts ...grpc.CallOption) (*ApplyCustomRoomNumRsp, error)
	OnDisbandCustomRoomNum(ctx context.Context, in *DisbandCustomRoomReq, opts ...grpc.CallOption) (*DisbandCustomRoomRsp, error)
}

type worldClient struct {
	cc *grpc.ClientConn
}

func NewWorldClient(cc *grpc.ClientConn) WorldClient {
	return &worldClient{cc}
}

func (c *worldClient) Ping(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/world.service.v1.world/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *worldClient) SayHello(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/world.service.v1.world/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *worldClient) SayHelloURL(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*HelloResp, error) {
	out := new(HelloResp)
	err := c.cc.Invoke(ctx, "/world.service.v1.world/SayHelloURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *worldClient) OnRedisDemo(ctx context.Context, in *RedisDemoReq, opts ...grpc.CallOption) (*RedisDemoResp, error) {
	out := new(RedisDemoResp)
	err := c.cc.Invoke(ctx, "/world.service.v1.world/OnRedisDemo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *worldClient) OnMysqlDemo(ctx context.Context, in *MysqlDemoReq, opts ...grpc.CallOption) (*MysqlDemoResp, error) {
	out := new(MysqlDemoResp)
	err := c.cc.Invoke(ctx, "/world.service.v1.world/OnMysqlDemo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *worldClient) OnGenerateRoomNums(ctx context.Context, in *GenerateRoomNumsReq, opts ...grpc.CallOption) (*GenerateRoomNumsRsp, error) {
	out := new(GenerateRoomNumsRsp)
	err := c.cc.Invoke(ctx, "/world.service.v1.world/OnGenerateRoomNums", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *worldClient) OnApplyCustomRoomNum(ctx context.Context, in *ApplyCustomRoomNumReq, opts ...grpc.CallOption) (*ApplyCustomRoomNumRsp, error) {
	out := new(ApplyCustomRoomNumRsp)
	err := c.cc.Invoke(ctx, "/world.service.v1.world/OnApplyCustomRoomNum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *worldClient) OnDisbandCustomRoomNum(ctx context.Context, in *DisbandCustomRoomReq, opts ...grpc.CallOption) (*DisbandCustomRoomRsp, error) {
	out := new(DisbandCustomRoomRsp)
	err := c.cc.Invoke(ctx, "/world.service.v1.world/OnDisbandCustomRoomNum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorldServer is the server API for World service.
type WorldServer interface {
	Ping(context.Context, *empty.Empty) (*empty.Empty, error)
	SayHello(context.Context, *HelloReq) (*empty.Empty, error)
	SayHelloURL(context.Context, *HelloReq) (*HelloResp, error)
	OnRedisDemo(context.Context, *RedisDemoReq) (*RedisDemoResp, error)
	OnMysqlDemo(context.Context, *MysqlDemoReq) (*MysqlDemoResp, error)
	// room Number generate
	OnGenerateRoomNums(context.Context, *GenerateRoomNumsReq) (*GenerateRoomNumsRsp, error)
	OnApplyCustomRoomNum(context.Context, *ApplyCustomRoomNumReq) (*ApplyCustomRoomNumRsp, error)
	OnDisbandCustomRoomNum(context.Context, *DisbandCustomRoomReq) (*DisbandCustomRoomRsp, error)
}

// UnimplementedWorldServer can be embedded to have forward compatible implementations.
type UnimplementedWorldServer struct {
}

func (*UnimplementedWorldServer) Ping(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedWorldServer) SayHello(ctx context.Context, req *HelloReq) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedWorldServer) SayHelloURL(ctx context.Context, req *HelloReq) (*HelloResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHelloURL not implemented")
}
func (*UnimplementedWorldServer) OnRedisDemo(ctx context.Context, req *RedisDemoReq) (*RedisDemoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnRedisDemo not implemented")
}
func (*UnimplementedWorldServer) OnMysqlDemo(ctx context.Context, req *MysqlDemoReq) (*MysqlDemoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnMysqlDemo not implemented")
}
func (*UnimplementedWorldServer) OnGenerateRoomNums(ctx context.Context, req *GenerateRoomNumsReq) (*GenerateRoomNumsRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnGenerateRoomNums not implemented")
}
func (*UnimplementedWorldServer) OnApplyCustomRoomNum(ctx context.Context, req *ApplyCustomRoomNumReq) (*ApplyCustomRoomNumRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnApplyCustomRoomNum not implemented")
}
func (*UnimplementedWorldServer) OnDisbandCustomRoomNum(ctx context.Context, req *DisbandCustomRoomReq) (*DisbandCustomRoomRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OnDisbandCustomRoomNum not implemented")
}

func RegisterWorldServer(s *grpc.Server, srv WorldServer) {
	s.RegisterService(&_World_serviceDesc, srv)
}

func _World_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/world.service.v1.world/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).Ping(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _World_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/world.service.v1.world/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).SayHello(ctx, req.(*HelloReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _World_SayHelloURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).SayHelloURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/world.service.v1.world/SayHelloURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).SayHelloURL(ctx, req.(*HelloReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _World_OnRedisDemo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RedisDemoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).OnRedisDemo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/world.service.v1.world/OnRedisDemo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).OnRedisDemo(ctx, req.(*RedisDemoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _World_OnMysqlDemo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MysqlDemoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).OnMysqlDemo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/world.service.v1.world/OnMysqlDemo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).OnMysqlDemo(ctx, req.(*MysqlDemoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _World_OnGenerateRoomNums_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateRoomNumsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).OnGenerateRoomNums(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/world.service.v1.world/OnGenerateRoomNums",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).OnGenerateRoomNums(ctx, req.(*GenerateRoomNumsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _World_OnApplyCustomRoomNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyCustomRoomNumReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).OnApplyCustomRoomNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/world.service.v1.world/OnApplyCustomRoomNum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).OnApplyCustomRoomNum(ctx, req.(*ApplyCustomRoomNumReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _World_OnDisbandCustomRoomNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisbandCustomRoomReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorldServer).OnDisbandCustomRoomNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/world.service.v1.world/OnDisbandCustomRoomNum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorldServer).OnDisbandCustomRoomNum(ctx, req.(*DisbandCustomRoomReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _World_serviceDesc = grpc.ServiceDesc{
	ServiceName: "world.service.v1.world",
	HandlerType: (*WorldServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _World_Ping_Handler,
		},
		{
			MethodName: "SayHello",
			Handler:    _World_SayHello_Handler,
		},
		{
			MethodName: "SayHelloURL",
			Handler:    _World_SayHelloURL_Handler,
		},
		{
			MethodName: "OnRedisDemo",
			Handler:    _World_OnRedisDemo_Handler,
		},
		{
			MethodName: "OnMysqlDemo",
			Handler:    _World_OnMysqlDemo_Handler,
		},
		{
			MethodName: "OnGenerateRoomNums",
			Handler:    _World_OnGenerateRoomNums_Handler,
		},
		{
			MethodName: "OnApplyCustomRoomNum",
			Handler:    _World_OnApplyCustomRoomNum_Handler,
		},
		{
			MethodName: "OnDisbandCustomRoomNum",
			Handler:    _World_OnDisbandCustomRoomNum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func (m *HelloReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HelloReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HelloReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HelloResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HelloResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HelloResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RedisDemoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RedisDemoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RedisDemoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RedisDemoResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RedisDemoResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RedisDemoResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MysqlDemoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MysqlDemoReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MysqlDemoReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MysqlDemoResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MysqlDemoResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MysqlDemoResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GenerateRoomNumsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenerateRoomNumsReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenerateRoomNumsReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ToId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.ToId))
		i--
		dAtA[i] = 0x18
	}
	if m.FromId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.FromId))
		i--
		dAtA[i] = 0x10
	}
	if m.GameId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.GameId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GenerateRoomNumsRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenerateRoomNumsRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenerateRoomNumsRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Content) > 0 {
		i -= len(m.Content)
		copy(dAtA[i:], m.Content)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Content)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ApplyCustomRoomNumReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplyCustomRoomNumReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyCustomRoomNumReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.GameId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.GameId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ApplyCustomRoomNumRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplyCustomRoomNumRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplyCustomRoomNumRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RoomNo != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.RoomNo))
		i--
		dAtA[i] = 0x20
	}
	if m.RoomNum != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.RoomNum))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DisbandCustomRoomReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DisbandCustomRoomReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DisbandCustomRoomReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RoomNum != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.RoomNum))
		i--
		dAtA[i] = 0x10
	}
	if m.GameId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.GameId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DisbandCustomRoomRsp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DisbandCustomRoomRsp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DisbandCustomRoomRsp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.UserId != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.UserId))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintApi(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Code != 0 {
		i = encodeVarintApi(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintApi(dAtA []byte, offset int, v uint64) int {
	offset -= sovApi(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *HelloReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HelloResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RedisDemoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RedisDemoResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovApi(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MysqlDemoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApi(uint64(m.Id))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MysqlDemoResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovApi(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GenerateRoomNumsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GameId != 0 {
		n += 1 + sovApi(uint64(m.GameId))
	}
	if m.FromId != 0 {
		n += 1 + sovApi(uint64(m.FromId))
	}
	if m.ToId != 0 {
		n += 1 + sovApi(uint64(m.ToId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GenerateRoomNumsRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovApi(uint64(m.Code))
	}
	l = len(m.Content)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ApplyCustomRoomNumReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GameId != 0 {
		n += 1 + sovApi(uint64(m.GameId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ApplyCustomRoomNumRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovApi(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.RoomNum != 0 {
		n += 1 + sovApi(uint64(m.RoomNum))
	}
	if m.RoomNo != 0 {
		n += 1 + sovApi(uint64(m.RoomNo))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DisbandCustomRoomReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GameId != 0 {
		n += 1 + sovApi(uint64(m.GameId))
	}
	if m.RoomNum != 0 {
		n += 1 + sovApi(uint64(m.RoomNum))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DisbandCustomRoomRsp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovApi(uint64(m.Code))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovApi(uint64(l))
	}
	if m.UserId != 0 {
		n += 1 + sovApi(uint64(m.UserId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApi(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApi(x uint64) (n int) {
	return sovApi(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *HelloReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HelloReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HelloReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HelloResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HelloResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HelloResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RedisDemoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RedisDemoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RedisDemoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RedisDemoResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RedisDemoResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RedisDemoResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MysqlDemoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MysqlDemoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MysqlDemoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MysqlDemoResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MysqlDemoResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MysqlDemoResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenerateRoomNumsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenerateRoomNumsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenerateRoomNumsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameId", wireType)
			}
			m.GameId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GameId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromId", wireType)
			}
			m.FromId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FromId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToId", wireType)
			}
			m.ToId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ToId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GenerateRoomNumsRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenerateRoomNumsRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenerateRoomNumsRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Content = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplyCustomRoomNumReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplyCustomRoomNumReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplyCustomRoomNumReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameId", wireType)
			}
			m.GameId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GameId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplyCustomRoomNumRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplyCustomRoomNumRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplyCustomRoomNumRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomNum", wireType)
			}
			m.RoomNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoomNum |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomNo", wireType)
			}
			m.RoomNo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoomNo |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DisbandCustomRoomReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DisbandCustomRoomReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DisbandCustomRoomReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GameId", wireType)
			}
			m.GameId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GameId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RoomNum", wireType)
			}
			m.RoomNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RoomNum |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DisbandCustomRoomRsp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApi
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DisbandCustomRoomRsp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DisbandCustomRoomRsp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApi
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApi
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApi
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApi(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApi
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApi(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApi
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApi
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApi
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApi
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApi
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApi        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApi          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApi = fmt.Errorf("proto: unexpected end of group")
)
